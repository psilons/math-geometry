%!PS-Adobe-2.0
%%Title: ./specialfunction/graph/erf.eps
%%Creator: gnuplot 4.2 patchlevel 4 
%%CreationDate: Mon Apr 13 17:20:12 2009
%%DocumentFonts: (atend)
%%BoundingBox: 201 50 554 553
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -40 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (./specialfunction/graph/erf.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 4 )
  /Author (cuir,U-HNAH\\cuir,S-1-5-21-51203040-55471789-3751118968-359565)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Apr 13 17:20:12 2009)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
636 240 M
4271 0 V
stroke
LTb
636 240 M
63 0 V
stroke
564 240 M
[ [(Helvetica) 120.0 0.0 true true 0 (-1)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 533 M
4271 0 V
stroke
LTb
636 533 M
63 0 V
stroke
564 533 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.8)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 826 M
4271 0 V
stroke
LTb
636 826 M
63 0 V
stroke
564 826 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.6)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 1118 M
4271 0 V
stroke
LTb
636 1118 M
63 0 V
stroke
564 1118 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.4)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 1411 M
4271 0 V
stroke
LTb
636 1411 M
63 0 V
stroke
564 1411 M
[ [(Helvetica) 120.0 0.0 true true 0 (-0.2)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 1704 M
4271 0 V
stroke
LTb
636 1704 M
63 0 V
stroke
564 1704 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 1997 M
4271 0 V
stroke
LTb
636 1997 M
63 0 V
stroke
564 1997 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.2)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 2290 M
4271 0 V
stroke
LTb
636 2290 M
63 0 V
stroke
564 2290 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.4)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 2582 M
4271 0 V
stroke
LTb
636 2582 M
63 0 V
stroke
564 2582 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.6)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 2875 M
4271 0 V
stroke
LTb
636 2875 M
63 0 V
stroke
564 2875 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0.8)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 3168 M
4271 0 V
stroke
LTb
636 3168 M
63 0 V
stroke
564 3168 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MRshow
1.000 UL
LTb
1.000 UL
LTa
636 240 M
0 2928 V
stroke
LTb
636 240 M
0 63 V
stroke
636 120 M
[ [(Helvetica) 120.0 0.0 true true 0 (-3)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
1348 240 M
0 2928 V
stroke
LTb
1348 240 M
0 63 V
stroke
1348 120 M
[ [(Helvetica) 120.0 0.0 true true 0 (-2)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
2060 240 M
0 2928 V
stroke
LTb
2060 240 M
0 63 V
stroke
2060 120 M
[ [(Helvetica) 120.0 0.0 true true 0 (-1)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
2772 240 M
0 2928 V
stroke
LTb
2772 240 M
0 63 V
stroke
2772 120 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 0)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
3483 240 M
0 2928 V
stroke
LTb
3483 240 M
0 63 V
stroke
3483 120 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 1)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
4195 240 M
0 2928 V
stroke
LTb
4195 240 M
0 63 V
stroke
4195 120 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 2)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTa
4907 240 M
0 2928 V
stroke
LTb
4907 240 M
0 63 V
stroke
4907 120 M
[ [(Helvetica) 120.0 0.0 true true 0 ( 3)]
] -40.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
636 3168 M
636 240 L
4271 0 V
0 2928 R
-4271 0 R
stroke
2771 3348 M
[ [(Times-Roman) 280.0 0.0 true true 0 (erf\(x\))]
] -93.3 MCshow
0.100 UP
1.000 UL
LTb
0.100 UP
1.000 UL
LT1
636 240 Crs
644 240 Crs
652 240 Crs
660 240 Crs
668 240 Crs
676 240 Crs
683 240 Crs
691 240 Crs
699 240 Crs
707 240 Crs
715 240 Crs
723 240 Crs
731 240 Crs
739 240 Crs
747 240 Crs
755 240 Crs
763 240 Crs
770 240 Crs
778 240 Crs
786 240 Crs
794 240 Crs
802 240 Crs
810 240 Crs
818 240 Crs
826 240 Crs
834 240 Crs
842 240 Crs
850 240 Crs
857 240 Crs
865 240 Crs
873 240 Crs
881 240 Crs
889 240 Crs
897 240 Crs
905 240 Crs
913 240 Crs
921 240 Crs
929 240 Crs
937 240 Crs
944 240 Crs
952 240 Crs
960 240 Crs
968 240 Crs
976 241 Crs
984 241 Crs
992 241 Crs
1000 241 Crs
1008 241 Crs
1016 241 Crs
1024 241 Crs
1031 241 Crs
1039 241 Crs
1047 241 Crs
1055 241 Crs
1063 241 Crs
1071 241 Crs
1079 241 Crs
1087 241 Crs
1095 241 Crs
1103 241 Crs
1111 241 Crs
1118 241 Crs
1126 242 Crs
1134 242 Crs
1142 242 Crs
1150 242 Crs
1158 242 Crs
1166 242 Crs
1174 242 Crs
1182 242 Crs
1190 242 Crs
1198 243 Crs
1205 243 Crs
1213 243 Crs
1221 243 Crs
1229 243 Crs
1237 243 Crs
1245 244 Crs
1253 244 Crs
1261 244 Crs
1269 244 Crs
1277 244 Crs
1285 245 Crs
1292 245 Crs
1300 245 Crs
1308 245 Crs
1316 246 Crs
1324 246 Crs
1332 246 Crs
1340 247 Crs
1348 247 Crs
1356 247 Crs
1364 248 Crs
1372 248 Crs
1379 248 Crs
1387 249 Crs
1395 249 Crs
1403 250 Crs
1411 250 Crs
1419 251 Crs
1427 251 Crs
1435 252 Crs
1443 252 Crs
1451 253 Crs
1459 253 Crs
1466 254 Crs
1474 255 Crs
1482 255 Crs
1490 256 Crs
1498 257 Crs
1506 257 Crs
1514 258 Crs
1522 259 Crs
1530 260 Crs
1538 261 Crs
1546 262 Crs
1553 263 Crs
1561 264 Crs
1569 265 Crs
1577 266 Crs
1585 267 Crs
1593 268 Crs
1601 269 Crs
1609 271 Crs
1617 272 Crs
1625 273 Crs
1633 275 Crs
1640 276 Crs
1648 278 Crs
1656 279 Crs
1664 281 Crs
1672 282 Crs
1680 284 Crs
1688 286 Crs
1696 288 Crs
1704 290 Crs
1712 292 Crs
1720 294 Crs
1727 296 Crs
1735 298 Crs
1743 300 Crs
1751 302 Crs
1759 305 Crs
1767 307 Crs
1775 310 Crs
1783 312 Crs
1791 315 Crs
1799 318 Crs
1807 321 Crs
1814 324 Crs
1822 327 Crs
1830 330 Crs
1838 333 Crs
1846 337 Crs
1854 340 Crs
1862 344 Crs
1870 347 Crs
1878 351 Crs
1886 355 Crs
1894 359 Crs
1901 363 Crs
1909 367 Crs
1917 371 Crs
1925 376 Crs
1933 380 Crs
1941 385 Crs
1949 390 Crs
1957 395 Crs
1965 400 Crs
1973 405 Crs
1981 410 Crs
1988 415 Crs
1996 421 Crs
2004 427 Crs
2012 432 Crs
2020 438 Crs
2028 444 Crs
2036 451 Crs
2044 457 Crs
2052 464 Crs
2060 470 Crs
2068 477 Crs
2075 484 Crs
2083 491 Crs
2091 499 Crs
2099 506 Crs
2107 514 Crs
2115 521 Crs
2123 529 Crs
2131 537 Crs
2139 546 Crs
2147 554 Crs
2155 563 Crs
2162 571 Crs
2170 580 Crs
2178 589 Crs
2186 599 Crs
2194 608 Crs
2202 618 Crs
2210 627 Crs
2218 637 Crs
2226 647 Crs
2234 658 Crs
2242 668 Crs
2249 679 Crs
2257 690 Crs
2265 701 Crs
2273 712 Crs
2281 723 Crs
2289 735 Crs
2297 746 Crs
2305 758 Crs
2313 770 Crs
2321 782 Crs
2329 795 Crs
2336 807 Crs
2344 820 Crs
2352 833 Crs
2360 846 Crs
2368 859 Crs
2376 873 Crs
2384 886 Crs
2392 900 Crs
2400 914 Crs
2408 928 Crs
2416 942 Crs
2423 956 Crs
2431 971 Crs
2439 986 Crs
2447 1000 Crs
2455 1015 Crs
2463 1031 Crs
2471 1046 Crs
2479 1061 Crs
2487 1077 Crs
2495 1093 Crs
2503 1108 Crs
2510 1124 Crs
2518 1140 Crs
2526 1157 Crs
2534 1173 Crs
2542 1190 Crs
2550 1206 Crs
2558 1223 Crs
2566 1240 Crs
2574 1257 Crs
2582 1274 Crs
2590 1291 Crs
2597 1308 Crs
2605 1325 Crs
2613 1343 Crs
2621 1360 Crs
2629 1378 Crs
2637 1396 Crs
2645 1413 Crs
2653 1431 Crs
2661 1449 Crs
2669 1467 Crs
2677 1485 Crs
2684 1503 Crs
2692 1521 Crs
2700 1539 Crs
2708 1558 Crs
2716 1576 Crs
2724 1594 Crs
2732 1612 Crs
2740 1631 Crs
2748 1649 Crs
2756 1667 Crs
2764 1686 Crs
2772 1704 Crs
2779 1722 Crs
2787 1741 Crs
2795 1759 Crs
2803 1777 Crs
2811 1796 Crs
2819 1814 Crs
2827 1832 Crs
2835 1850 Crs
2843 1869 Crs
2851 1887 Crs
2859 1905 Crs
2866 1923 Crs
2874 1941 Crs
2882 1959 Crs
2890 1977 Crs
2898 1995 Crs
2906 2012 Crs
2914 2030 Crs
2922 2048 Crs
2930 2065 Crs
2938 2083 Crs
2946 2100 Crs
2953 2117 Crs
2961 2134 Crs
2969 2151 Crs
2977 2168 Crs
2985 2185 Crs
2993 2202 Crs
3001 2218 Crs
3009 2235 Crs
3017 2251 Crs
3025 2268 Crs
3033 2284 Crs
3040 2300 Crs
3048 2315 Crs
3056 2331 Crs
3064 2347 Crs
3072 2362 Crs
3080 2377 Crs
3088 2393 Crs
3096 2408 Crs
3104 2422 Crs
3112 2437 Crs
3120 2452 Crs
3127 2466 Crs
3135 2480 Crs
3143 2494 Crs
3151 2508 Crs
3159 2522 Crs
3167 2535 Crs
3175 2549 Crs
3183 2562 Crs
3191 2575 Crs
3199 2588 Crs
3207 2601 Crs
3214 2613 Crs
3222 2626 Crs
3230 2638 Crs
3238 2650 Crs
3246 2662 Crs
3254 2673 Crs
3262 2685 Crs
3270 2696 Crs
3278 2707 Crs
3286 2718 Crs
3294 2729 Crs
3301 2740 Crs
3309 2750 Crs
3317 2761 Crs
3325 2771 Crs
3333 2781 Crs
3341 2790 Crs
3349 2800 Crs
3357 2809 Crs
3365 2819 Crs
3373 2828 Crs
3381 2837 Crs
3388 2845 Crs
3396 2854 Crs
3404 2862 Crs
3412 2871 Crs
3420 2879 Crs
3428 2887 Crs
3436 2894 Crs
3444 2902 Crs
3452 2909 Crs
3460 2917 Crs
3468 2924 Crs
3475 2931 Crs
3483 2938 Crs
3491 2944 Crs
3499 2951 Crs
3507 2957 Crs
3515 2964 Crs
3523 2970 Crs
3531 2976 Crs
3539 2981 Crs
3547 2987 Crs
3555 2993 Crs
3562 2998 Crs
3570 3003 Crs
3578 3008 Crs
3586 3013 Crs
3594 3018 Crs
3602 3023 Crs
3610 3028 Crs
3618 3032 Crs
3626 3037 Crs
3634 3041 Crs
3642 3045 Crs
3649 3049 Crs
3657 3053 Crs
3665 3057 Crs
3673 3061 Crs
3681 3064 Crs
3689 3068 Crs
3697 3071 Crs
3705 3075 Crs
3713 3078 Crs
3721 3081 Crs
3729 3084 Crs
3736 3087 Crs
3744 3090 Crs
3752 3093 Crs
3760 3096 Crs
3768 3098 Crs
3776 3101 Crs
3784 3103 Crs
3792 3106 Crs
3800 3108 Crs
3808 3110 Crs
3816 3112 Crs
3823 3114 Crs
3831 3116 Crs
3839 3118 Crs
3847 3120 Crs
3855 3122 Crs
3863 3124 Crs
3871 3126 Crs
3879 3127 Crs
3887 3129 Crs
3895 3130 Crs
3903 3132 Crs
3910 3133 Crs
3918 3135 Crs
3926 3136 Crs
3934 3137 Crs
3942 3139 Crs
3950 3140 Crs
3958 3141 Crs
3966 3142 Crs
3974 3143 Crs
3982 3144 Crs
3990 3145 Crs
3997 3146 Crs
4005 3147 Crs
4013 3148 Crs
4021 3149 Crs
4029 3150 Crs
4037 3151 Crs
4045 3151 Crs
4053 3152 Crs
4061 3153 Crs
4069 3153 Crs
4077 3154 Crs
4084 3155 Crs
4092 3155 Crs
4100 3156 Crs
4108 3156 Crs
4116 3157 Crs
4124 3157 Crs
4132 3158 Crs
4140 3158 Crs
4148 3159 Crs
4156 3159 Crs
4164 3160 Crs
4171 3160 Crs
4179 3160 Crs
4187 3161 Crs
4195 3161 Crs
4203 3161 Crs
4211 3162 Crs
4219 3162 Crs
4227 3162 Crs
4235 3163 Crs
4243 3163 Crs
4251 3163 Crs
4258 3163 Crs
4266 3164 Crs
4274 3164 Crs
4282 3164 Crs
4290 3164 Crs
4298 3164 Crs
4306 3165 Crs
4314 3165 Crs
4322 3165 Crs
4330 3165 Crs
4338 3165 Crs
4345 3165 Crs
4353 3166 Crs
4361 3166 Crs
4369 3166 Crs
4377 3166 Crs
4385 3166 Crs
4393 3166 Crs
4401 3166 Crs
4409 3166 Crs
4417 3166 Crs
4425 3167 Crs
4432 3167 Crs
4440 3167 Crs
4448 3167 Crs
4456 3167 Crs
4464 3167 Crs
4472 3167 Crs
4480 3167 Crs
4488 3167 Crs
4496 3167 Crs
4504 3167 Crs
4512 3167 Crs
4519 3167 Crs
4527 3167 Crs
4535 3167 Crs
4543 3167 Crs
4551 3167 Crs
4559 3167 Crs
4567 3167 Crs
4575 3168 Crs
4583 3168 Crs
4591 3168 Crs
4599 3168 Crs
4606 3168 Crs
4614 3168 Crs
4622 3168 Crs
4630 3168 Crs
4638 3168 Crs
4646 3168 Crs
4654 3168 Crs
4662 3168 Crs
4670 3168 Crs
4678 3168 Crs
4686 3168 Crs
4693 3168 Crs
4701 3168 Crs
4709 3168 Crs
4717 3168 Crs
4725 3168 Crs
4733 3168 Crs
4741 3168 Crs
4749 3168 Crs
4757 3168 Crs
4765 3168 Crs
4773 3168 Crs
4780 3168 Crs
4788 3168 Crs
4796 3168 Crs
4804 3168 Crs
4812 3168 Crs
4820 3168 Crs
4828 3168 Crs
4836 3168 Crs
4844 3168 Crs
4852 3168 Crs
4860 3168 Crs
4867 3168 Crs
4875 3168 Crs
4883 3168 Crs
4891 3168 Crs
4899 3168 Crs
4907 3168 Crs
1.000 UL
LTb
636 3168 M
636 240 L
4271 0 V
0 2928 R
-4271 0 R
0.100 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman Helvetica
%%Pages: 1
